name: Run PRRC Connector

on:
  workflow_dispatch: # run manually from Actions tab
  schedule:
    - cron: '0 9 * * *' # Run daily at 9:00 AM UTC (4:00 AM EST)

jobs:
  run-connector:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Sanity check secrets
        run: |
          python - <<EOF
          import os
          print("RICS_API_TOKEN present:", bool(os.getenv("RICS_API_TOKEN")))
          print("META_ACCESS_TOKEN present:", bool(os.getenv("META_ACCESS_TOKEN")))
          print("META_DATASET_ID present:", bool(os.getenv("META_DATASET_ID")))
          print("OPTIMIZELY_API_KEY present:", bool(os.getenv("OPTIMIZELY_API_KEY")))
          print("Google Drive service account:", os.getenv("GDRIVE_SERVICE_ACCOUNT", "Not found"))
          EOF
        env:
          RICS_API_TOKEN: ${{ secrets.RICS_API_TOKEN }}
          META_ACCESS_TOKEN: ${{ secrets.META_ACCESS_TOKEN }}
          META_DATASET_ID: ${{ secrets.META_OFFLINE_EVENT_SET_ID }}
          OPTIMIZELY_API_KEY: ${{ secrets.OPTIMIZELY_API_TOKEN }}
          GDRIVE_SERVICE_ACCOUNT: ${{ secrets.GDRIVE_CREDENTIALS }}

      - name: Run RICS fetch + dedupe + upload
        run: python scripts/sync_rics_live.py
        env:
          RICS_API_TOKEN: ${{ secrets.RICS_API_TOKEN }}
          GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
          GDRIVE_FOLDER_ID_RICS: ${{ secrets.GDRIVE_FOLDER_ID_RICS }}

      - name: Sync to Optimizely
        run: python scripts/sync_to_optimizely.py rics_customer_purchase_history_deduped.csv
        env:
          OPTIMIZELY_API_KEY: ${{ secrets.OPTIMIZELY_API_TOKEN }}

      - name: Sync to Meta (Offline Events)
        run: python scripts/sync_rics_to_meta.py rics_customer_purchase_history_deduped.csv
        env:
          META_ACCESS_TOKEN: ${{ secrets.META_ACCESS_TOKEN }}
          META_DATASET_ID: ${{ secrets.META_OFFLINE_EVENT_SET_ID }}

  validate-rics-token:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests

      - name: Run RICS Token Validator
        env:
          RICS_API_TOKEN: ${{ secrets.RICS_API_TOKEN }}
        run: python scripts/validate_rics_token.py
